from typing import Optional

from boto3 import client
from botocore.client import Config


def connection(
        endpoint_url: str,
        service_name: str = 's3',
        region_name: Optional[str] = None,
        api_version: Optional[str] = None,
        use_ssl: bool = False,
        verify: Optional[bool] = None,
        aws_access_key_id: Optional[str] = None,
        aws_secret_access_key: Optional[str] = None,
        aws_session_token: Optional[str] = None,

        config_region_name: Optional[str] = None,
        config_signature_version: Optional[str] = None,
        config_user_agent: Optional[str] = None,
        config_user_agent_extra: Optional[str] = None,
        config_user_agent_appid: Optional[str] = None,
        config_connect_timeout: float | int = 60,
        config_read_timeout: float | int = 60,
        config_parameter_validation: bool = False,  # True reduces performance
        config_max_pool_connections: int = 10,
        config_proxies: Optional[dict] = None,
        config_proxies_config: Optional[dict] = None,
        config_s3: Optional[dict] = None,
        config_retries: Optional[dict] = None,
        config_client_cert: Optional[str] = None,
        config_inject_host_prefix: bool = True,
        config_use_dualstack_endpoint: Optional[bool] = None,
        config_use_fips_endpoint: Optional[bool] = None,
        config_ignore_configured_endpoint_urls: Optional[bool] = None,
        config_tcp_keepalive: Optional[bool] = None,
        config_request_min_compression_size_bytes: Optional[int] = None,
        config_disable_request_compression: Optional[bool] = None,
        config_client_context_params: Optional[dict] = None,
) -> client:
    return client(
        service_name=service_name,
        region_name=region_name,
        api_version=api_version,
        use_ssl=use_ssl,
        verify=verify,
        endpoint_url=endpoint_url,
        aws_access_key_id=aws_access_key_id,
        aws_secret_access_key=aws_secret_access_key,
        aws_session_token=aws_session_token,
        config=Config(
            region_name=config_region_name,
            signature_version=config_signature_version,
            user_agent=config_user_agent,
            user_agent_extra=config_user_agent_extra,
            user_agent_appid=config_user_agent_appid,
            connect_timeout=config_connect_timeout,
            read_timeout=config_read_timeout,
            parameter_validation=config_parameter_validation,
            max_pool_connections=config_max_pool_connections,
            proxies=config_proxies,
            proxies_config=config_proxies_config,
            s3=config_s3,
            retries=config_retries,
            client_cert=config_client_cert,
            inject_host_prefix=config_inject_host_prefix,
            use_dualstack_endpoint=config_use_dualstack_endpoint,
            use_fips_endpoint=config_use_fips_endpoint,
            ignore_configured_endpoint_urls=config_ignore_configured_endpoint_urls,
            tcp_keepalive=config_tcp_keepalive,
            request_min_compression_size_bytes=config_request_min_compression_size_bytes,
            disable_request_compression=config_disable_request_compression,
            client_context_params=config_client_context_params,
        ),
    )
